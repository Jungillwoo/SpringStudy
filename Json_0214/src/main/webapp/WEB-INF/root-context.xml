<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    jdbc.properties파일을 로드하기 위해 context라는 네임스페이스가 필요하다
  -->
  <context:property-placeholder location="classpath:mybatis/props/jdbc.properties"/>

  <!-- 아파치의 dbcp라이브러리가 제공하는 BasicDataSource를 생성한다. -->
  <bean id="ds"
        class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.user}"/>
    <property name="password" value="${jdbc.pwd}"/>

    <!-- 동시에 사용할 수 있는 최대 커넥션 수 -->
    <property name="maxActive" value="${jdbc.maxActive}"/>

    <!-- 커넥션 풀에 반납할 때 최대로 유지되는 커넥션 수 -->
    <property name="maxIdle" value="${jdbc.maxIdle}"/>

    <!-- 커넥션 풀에 반납할 때 최소로 유지되는 커넥션 수 -->
    <property name="minIdle" value="${jdbc.minIdle}"/>
  </bean>

  <!-- mybatis-spring라이브러리가 제공하는 FactoryBean객체 생성
       이 객체는 DataSource가 있어야 생성할 수 있다. -->
  <bean id="factory"
        class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 앞서 생성된 BasicDataSource를 현재 객체의 변수들 중
         dataSource라는 변수에 저장해야 한다. -->
    <property name="dataSource" ref="ds"/>

    <!-- mapper (bbs.xml)들의 위치 지정하자. -->
    <property name="mapperLocations"
              value="classpath:mapper/*.xml"/>
  </bean>

  <!-- factory를 통해 SqlSession과 같은 객체 생성 -->
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg ref="factory"/>
  </bean>

  <context:component-scan base-package="mybatis.dao"/>
</beans>